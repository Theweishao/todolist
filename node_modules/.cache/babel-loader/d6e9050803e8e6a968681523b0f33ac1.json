{"ast":null,"code":"var _jsxFileName = \"G:\\\\HBproject\\\\The third stage\\\\React\\\\h52005-react\\\\my-app\\\\src\\\\components\\\\TodoList.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TodoItem from './TodoItem'; // 列表\n\nclass TodoList extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, \"\\u5217\\u8868\", this.props.todos.map(todo => /*#__PURE__*/React.createElement(TodoItem, Object.assign({\n      key: todo.id\n    }, todo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 41\n      }\n    }))));\n  }\n\n} // 连接当前组件与 store\n// 使用 react-redux 绑定库中的 connect() 方法\n\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos.todos // state.todos 代表的是在合并根reducer时取的名称，通过它拿到整个todosReducer中的state对象\n\n  };\n}; // connect() 调用后返回的是一个 HOC\n\n\nconst hoc = connect(mapStateToProps); // 将 TodoList 作为 HOC 的参数\n\nexport default hoc(TodoList);","map":{"version":3,"sources":["G:/HBproject/The third stage/React/h52005-react/my-app/src/components/TodoList.jsx"],"names":["React","Component","connect","TodoItem","TodoList","render","props","todos","map","todo","id","mapStateToProps","state","hoc"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;AACA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC/BI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,iBAAK,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC;AAApB,OAA4BD,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA9B,CAHJ,CADF;AAQD;;AAV8B,C,CAajC;AACA;;;AACA,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLL,IAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYA,KADd,CACoB;;AADpB,GAAP;AAGD,CAJD,C,CAKA;;;AACA,MAAMM,GAAG,GAAGX,OAAO,CAACS,eAAD,CAAnB,C,CACA;;AACA,eAAeE,GAAG,CAACT,QAAD,CAAlB","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport TodoItem from './TodoItem'\r\n\r\n// 列表\r\nclass TodoList extends Component {\r\n  render() {\r\n    return (\r\n      <ul>\r\n        列表\r\n        {\r\n          this.props.todos.map(todo => (<TodoItem key={todo.id} {...todo} />))\r\n        }\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\n// 连接当前组件与 store\r\n// 使用 react-redux 绑定库中的 connect() 方法\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todos: state.todos.todos // state.todos 代表的是在合并根reducer时取的名称，通过它拿到整个todosReducer中的state对象\r\n  }\r\n}\r\n// connect() 调用后返回的是一个 HOC\r\nconst hoc = connect(mapStateToProps)\r\n// 将 TodoList 作为 HOC 的参数\r\nexport default hoc(TodoList)\r\n"]},"metadata":{},"sourceType":"module"}