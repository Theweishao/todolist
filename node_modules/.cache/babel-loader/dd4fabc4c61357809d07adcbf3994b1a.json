{"ast":null,"code":"var _jsxFileName = \"G:\\\\HBproject\\\\The third stage\\\\React\\\\h52005-react\\\\To-do-list\\\\src\\\\components\\\\TodoItem.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes, { nominalTypeHack } from 'prop-types';\nimport { removeTodoItemAction, toggleTodoItemAction, changedTodoItemAction } from '../actions/todos';\nimport { connect } from 'react-redux';\nimport { Card } from 'antd';\nimport 'antd/dist/antd.css';\nimport './Todoitem.css'; // 待办事项列表项\n\nclass TodoItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputValue: this.props.title\n    };\n\n    this.changedValue = event => {\n      // 在组件中需要调用 setState() 方法来更新 state\n      // 中的状态数据，否则无法响应式渲染\n      this.setState({\n        inputValue: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      id,\n      title,\n      completed\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n      className: \"Card\",\n      title: \"\\u5F85\\u529E\\u4E8B\\u9879\",\n      extra: /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 54\n        }\n      }, \"More\"),\n      style: {\n        width: 300,\n        color: completed ? '#f00' : '#0f0'\n      },\n      bodyStyle: {\n        height: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: this.changedValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.props.toggle(id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"\\u6807\\u8BB0\\u4E3A\", completed ? '未' : '已', \"\\u5B8C\\u6210\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.props.changed(title);\n      },\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"\\u5B8C\\u6210\\u7F16\\u8F91\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.props.remove(id);\n      },\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"\\u5220\\u9664\"))));\n  }\n\n}\n\nTodoItem.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  completed: PropTypes.bool\n};\nTodoItem.defaultProps = {\n  id: 0,\n  title: '',\n  completed: false\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggle: id => dispatch(toggleTodoItemAction(id)),\n    remove: id => dispatch(removeTodoItemAction(id)),\n    changed: title => dispatch(changedTodoItemAction(title))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(TodoItem);","map":{"version":3,"sources":["G:/HBproject/The third stage/React/h52005-react/To-do-list/src/components/TodoItem.jsx"],"names":["React","Component","ReactDOM","PropTypes","nominalTypeHack","removeTodoItemAction","toggleTodoItemAction","changedTodoItemAction","connect","Card","TodoItem","state","inputValue","props","title","changedValue","event","setState","target","value","render","id","completed","width","color","height","toggle","changed","float","remove","propTypes","number","string","bool","defaultProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport PropTypes, { nominalTypeHack } from 'prop-types'\r\nimport { removeTodoItemAction, toggleTodoItemAction, changedTodoItemAction } from '../actions/todos'\r\nimport { connect } from 'react-redux'\r\nimport { Card } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './Todoitem.css'\r\n\r\n// 待办事项列表项\r\nclass TodoItem extends Component {\r\n  static propTypes = {\r\n    id: PropTypes.number,\r\n    title: PropTypes.string,\r\n    completed: PropTypes.bool\r\n  }\r\n  static defaultProps = {\r\n    id: 0,\r\n    title: '',\r\n    completed: false\r\n  }\r\n  state = {\r\n    inputValue: this.props.title\r\n  }\r\n  changedValue = event => {\r\n    // 在组件中需要调用 setState() 方法来更新 state\r\n    // 中的状态数据，否则无法响应式渲染\r\n    this.setState({\r\n      inputValue: event.target.value\r\n    })\r\n  }\r\n  render() {\r\n    const { id, title, completed } = this.props\r\n    return (\r\n      <ul>\r\n      <li>\r\n        <>\r\n          <Card className=\"Card\" title=\"待办事项\" extra={<a href=\"#\">More</a>} style={{ width: 300,color: completed ? '#f00' : '#0f0' }} bodyStyle={{height:10}}>\r\n          {/* {title} */}\r\n          {/* <p contenteditable=\"true\">{title}</p> */}\r\n          <input type=\"text\" value={title}  onChange={this.changedValue} />\r\n          </Card>\r\n        </>\r\n        <>\r\n          <button onClick={() => { this.props.toggle(id)}}>标记为{completed?'未':'已'}完成</button>\r\n\r\n          <button onClick={() => { this.props.changed(title)}} style={{ float:'right'}}>完成编辑</button>\r\n          \r\n          <button onClick={() => { this.props.remove(id)}} style={{ float:'right'}}>删除</button>\r\n\r\n        </>\r\n      </li>\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    toggle: id => dispatch(toggleTodoItemAction(id)),\r\n    remove: id => dispatch(removeTodoItemAction(id)),\r\n    changed: title => dispatch(changedTodoItemAction(title))\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(TodoItem)\r\n"]},"metadata":{},"sourceType":"module"}